name: Android CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - 'renovate.json'
      - '.editorconfig'
      - '.gitignore'
      - '.github/**'
      - '.github/workflows/**'
      - '.idea/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - 'renovate.json'
      - '.editorconfig'
      - '.gitignore'
      - '.github/**'
      - '.github/workflows/**'
      - '.idea/**'
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') && (github.ref == 'refs/heads/main' || github.event_name == 'pull_request') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Grant execute permission
        run: chmod +x gradlew

      - name: Decode keystore (push -> main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          mkdir -p app
          echo "$KEYSTORE_B64" | base64 -d > app/ono.jks
        env:
          KEYSTORE_B64: ${{ secrets.KEYSTORE_B64 }}
        
      - name: Build unsigned Release for PR
        if: github.event_name == 'pull_request'
        run: ./gradlew assembleRelease --warning-mode all --stacktrace

      - name: Build signed Release for main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          ./gradlew assembleRelease \
            -PKEYSTORE_FILE=ono.jks \
            -PKEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }} \
            -PKEY_ALIAS=key0 \
            -PKEY_PASSWORD=${{ secrets.KEY_PASSWORD }} \
            --warning-mode all --stacktrace

          
      - name: Upload PR APK (unsigned)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: ono-pr-apk
          path: app/build/outputs/apk/release/**/*.apk
          if-no-files-found: error

      - name: Upload Release APK (signed)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: ono-release-apk
          path: app/build/outputs/apk/release/**/*.apk
          if-no-files-found: error

  upload-telegram:
    name: Upload to Telegram (仅 main push)
    needs: build
    runs-on: ubuntu-latest
    if: ${{ success() && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: ono-release-apk
          path: artifacts

      - name: Find APK file
        id: find_apk
        shell: bash
        run: |
          shopt -s nullglob
          files=(artifacts/**/*.apk artifacts/*.apk)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No APK found!" >&2
            exit 1
          fi
          # 取第一个（如果有多个，你也可以用循环逐个发）
          echo "apk_path=${files[0]}" >> "$GITHUB_OUTPUT"

      - name: Send APK via Telegram API
        env:
          BOT_TOKEN:      ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID:        ${{ secrets.TELEGRAM_CHAT_ID }}
          APK_PATH:       ${{ steps.find_apk.outputs.apk_path }}
          SHA:            ${{ github.sha }}
          COMMIT_MSG:     ${{ github.event.head_commit.message }}
          COMMIT_AUTHOR:  ${{ github.event.head_commit.author.name }}
          REPO:           ${{ github.repository }}
        run: |
          echo "Sending $APK_PATH"
          
          commit_msg="$COMMIT_MSG"
          commit_author="$COMMIT_AUTHOR"
          commit_url="https://github.com/${REPO}/commit/${SHA}"
          
          caption="🎉 *检测到新的 GitHub 推送！*
          *Commit SHA:* \`${SHA}\`
          
          \`\`\`
          ${commit_msg}
          \`\`\`
          
          *提交者* \`${commit_author}\`
          [查看详情](${commit_url})"
          
          curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument" \
            -F chat_id="${CHAT_ID}" \
            -F document=@"${APK_PATH}" \
            -F caption="${caption}" \
            -F parse_mode=Markdown
